#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inteligentna_Ksiazka_Kucharska
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Przepisy")]
	public partial class PrzepisyDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSklad(Sklad instance);
    partial void UpdateSklad(Sklad instance);
    partial void DeleteSklad(Sklad instance);
    partial void InsertPrzepisy(Przepisy instance);
    partial void UpdatePrzepisy(Przepisy instance);
    partial void DeletePrzepisy(Przepisy instance);
    partial void InsertProduktLista(ProduktLista instance);
    partial void UpdateProduktLista(ProduktLista instance);
    partial void DeleteProduktLista(ProduktLista instance);
    partial void InsertProdukt(Produkt instance);
    partial void UpdateProdukt(Produkt instance);
    partial void DeleteProdukt(Produkt instance);
    partial void InsertLista(Lista instance);
    partial void UpdateLista(Lista instance);
    partial void DeleteLista(Lista instance);
    #endregion
		
		public PrzepisyDataContext() : 
				base(global::Inteligentna_Ksiazka_Kucharska.Properties.Settings.Default.PrzepisyConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public PrzepisyDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PrzepisyDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PrzepisyDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PrzepisyDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Sklad> Sklads
		{
			get
			{
				return this.GetTable<Sklad>();
			}
		}
		
		public System.Data.Linq.Table<Przepisy> Przepisies
		{
			get
			{
				return this.GetTable<Przepisy>();
			}
		}
		
		public System.Data.Linq.Table<ProduktLista> ProduktListas
		{
			get
			{
				return this.GetTable<ProduktLista>();
			}
		}
		
		public System.Data.Linq.Table<Produkt> Produkts
		{
			get
			{
				return this.GetTable<Produkt>();
			}
		}
		
		public System.Data.Linq.Table<Lista> Listas
		{
			get
			{
				return this.GetTable<Lista>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sklad")]
	public partial class Sklad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _sklad_ID;
		
		private int _Id_przepisu;
		
		private int _Id_produktu;
		
		private string _Ilosc;
		
		private EntityRef<Przepisy> _Przepisy;
		
		private EntityRef<Produkt> _Produkt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsklad_IDChanging(int value);
    partial void Onsklad_IDChanged();
    partial void OnId_przepisuChanging(int value);
    partial void OnId_przepisuChanged();
    partial void OnId_produktuChanging(int value);
    partial void OnId_produktuChanged();
    partial void OnIloscChanging(string value);
    partial void OnIloscChanged();
    #endregion
		
		public Sklad()
		{
			this._Przepisy = default(EntityRef<Przepisy>);
			this._Produkt = default(EntityRef<Produkt>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sklad_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int sklad_ID
		{
			get
			{
				return this._sklad_ID;
			}
			set
			{
				if ((this._sklad_ID != value))
				{
					this.Onsklad_IDChanging(value);
					this.SendPropertyChanging();
					this._sklad_ID = value;
					this.SendPropertyChanged("sklad_ID");
					this.Onsklad_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_przepisu", DbType="Int NOT NULL")]
		public int Id_przepisu
		{
			get
			{
				return this._Id_przepisu;
			}
			set
			{
				if ((this._Id_przepisu != value))
				{
					if (this._Przepisy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_przepisuChanging(value);
					this.SendPropertyChanging();
					this._Id_przepisu = value;
					this.SendPropertyChanged("Id_przepisu");
					this.OnId_przepisuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_produktu", DbType="Int NOT NULL")]
		public int Id_produktu
		{
			get
			{
				return this._Id_produktu;
			}
			set
			{
				if ((this._Id_produktu != value))
				{
					if (this._Produkt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_produktuChanging(value);
					this.SendPropertyChanging();
					this._Id_produktu = value;
					this.SendPropertyChanged("Id_produktu");
					this.OnId_produktuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ilosc", DbType="VarChar(15)")]
		public string Ilosc
		{
			get
			{
				return this._Ilosc;
			}
			set
			{
				if ((this._Ilosc != value))
				{
					this.OnIloscChanging(value);
					this.SendPropertyChanging();
					this._Ilosc = value;
					this.SendPropertyChanged("Ilosc");
					this.OnIloscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Przepisy_Sklad", Storage="_Przepisy", ThisKey="Id_przepisu", OtherKey="Id_przepisu", IsForeignKey=true)]
		public Przepisy Przepisy
		{
			get
			{
				return this._Przepisy.Entity;
			}
			set
			{
				Przepisy previousValue = this._Przepisy.Entity;
				if (((previousValue != value) 
							|| (this._Przepisy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Przepisy.Entity = null;
						previousValue.Sklads.Remove(this);
					}
					this._Przepisy.Entity = value;
					if ((value != null))
					{
						value.Sklads.Add(this);
						this._Id_przepisu = value.Id_przepisu;
					}
					else
					{
						this._Id_przepisu = default(int);
					}
					this.SendPropertyChanged("Przepisy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produkt_Sklad", Storage="_Produkt", ThisKey="Id_produktu", OtherKey="Id_produktu", IsForeignKey=true)]
		public Produkt Produkt
		{
			get
			{
				return this._Produkt.Entity;
			}
			set
			{
				Produkt previousValue = this._Produkt.Entity;
				if (((previousValue != value) 
							|| (this._Produkt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produkt.Entity = null;
						previousValue.Sklads.Remove(this);
					}
					this._Produkt.Entity = value;
					if ((value != null))
					{
						value.Sklads.Add(this);
						this._Id_produktu = value.Id_produktu;
					}
					else
					{
						this._Id_produktu = default(int);
					}
					this.SendPropertyChanged("Produkt");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Przepisy")]
	public partial class Przepisy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_przepisu;
		
		private string _Nazwa;
		
		private System.Nullable<int> _Czas_przygotowania;
		
		private string _Instrukcje;
		
		private System.Data.Linq.Binary _Zdjecie;
		
		private EntitySet<Sklad> _Sklads;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_przepisuChanging(int value);
    partial void OnId_przepisuChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnCzas_przygotowaniaChanging(System.Nullable<int> value);
    partial void OnCzas_przygotowaniaChanged();
    partial void OnInstrukcjeChanging(string value);
    partial void OnInstrukcjeChanged();
    partial void OnZdjecieChanging(System.Data.Linq.Binary value);
    partial void OnZdjecieChanged();
    #endregion
		
		public Przepisy()
		{
			this._Sklads = new EntitySet<Sklad>(new Action<Sklad>(this.attach_Sklads), new Action<Sklad>(this.detach_Sklads));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_przepisu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_przepisu
		{
			get
			{
				return this._Id_przepisu;
			}
			set
			{
				if ((this._Id_przepisu != value))
				{
					this.OnId_przepisuChanging(value);
					this.SendPropertyChanging();
					this._Id_przepisu = value;
					this.SendPropertyChanged("Id_przepisu");
					this.OnId_przepisuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Czas_przygotowania", DbType="Int")]
		public System.Nullable<int> Czas_przygotowania
		{
			get
			{
				return this._Czas_przygotowania;
			}
			set
			{
				if ((this._Czas_przygotowania != value))
				{
					this.OnCzas_przygotowaniaChanging(value);
					this.SendPropertyChanging();
					this._Czas_przygotowania = value;
					this.SendPropertyChanged("Czas_przygotowania");
					this.OnCzas_przygotowaniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instrukcje", DbType="VarChar(80)")]
		public string Instrukcje
		{
			get
			{
				return this._Instrukcje;
			}
			set
			{
				if ((this._Instrukcje != value))
				{
					this.OnInstrukcjeChanging(value);
					this.SendPropertyChanging();
					this._Instrukcje = value;
					this.SendPropertyChanged("Instrukcje");
					this.OnInstrukcjeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zdjecie", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Zdjecie
		{
			get
			{
				return this._Zdjecie;
			}
			set
			{
				if ((this._Zdjecie != value))
				{
					this.OnZdjecieChanging(value);
					this.SendPropertyChanging();
					this._Zdjecie = value;
					this.SendPropertyChanged("Zdjecie");
					this.OnZdjecieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Przepisy_Sklad", Storage="_Sklads", ThisKey="Id_przepisu", OtherKey="Id_przepisu")]
		public EntitySet<Sklad> Sklads
		{
			get
			{
				return this._Sklads;
			}
			set
			{
				this._Sklads.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sklads(Sklad entity)
		{
			this.SendPropertyChanging();
			entity.Przepisy = this;
		}
		
		private void detach_Sklads(Sklad entity)
		{
			this.SendPropertyChanging();
			entity.Przepisy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProduktLista")]
	public partial class ProduktLista : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Id_produktu;
		
		private int _lista_ID;
		
		private EntityRef<Produkt> _Produkt;
		
		private EntityRef<Lista> _Lista;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnId_produktuChanging(int value);
    partial void OnId_produktuChanged();
    partial void Onlista_IDChanging(int value);
    partial void Onlista_IDChanged();
    #endregion
		
		public ProduktLista()
		{
			this._Produkt = default(EntityRef<Produkt>);
			this._Lista = default(EntityRef<Lista>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_produktu", DbType="Int NOT NULL")]
		public int Id_produktu
		{
			get
			{
				return this._Id_produktu;
			}
			set
			{
				if ((this._Id_produktu != value))
				{
					if (this._Produkt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_produktuChanging(value);
					this.SendPropertyChanging();
					this._Id_produktu = value;
					this.SendPropertyChanged("Id_produktu");
					this.OnId_produktuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lista_ID", DbType="Int NOT NULL")]
		public int lista_ID
		{
			get
			{
				return this._lista_ID;
			}
			set
			{
				if ((this._lista_ID != value))
				{
					if (this._Lista.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlista_IDChanging(value);
					this.SendPropertyChanging();
					this._lista_ID = value;
					this.SendPropertyChanged("lista_ID");
					this.Onlista_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produkt_ProduktLista", Storage="_Produkt", ThisKey="Id_produktu", OtherKey="Id_produktu", IsForeignKey=true)]
		public Produkt Produkt
		{
			get
			{
				return this._Produkt.Entity;
			}
			set
			{
				Produkt previousValue = this._Produkt.Entity;
				if (((previousValue != value) 
							|| (this._Produkt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produkt.Entity = null;
						previousValue.ProduktListas.Remove(this);
					}
					this._Produkt.Entity = value;
					if ((value != null))
					{
						value.ProduktListas.Add(this);
						this._Id_produktu = value.Id_produktu;
					}
					else
					{
						this._Id_produktu = default(int);
					}
					this.SendPropertyChanged("Produkt");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lista_ProduktLista", Storage="_Lista", ThisKey="lista_ID", OtherKey="lista_ID", IsForeignKey=true)]
		public Lista Lista
		{
			get
			{
				return this._Lista.Entity;
			}
			set
			{
				Lista previousValue = this._Lista.Entity;
				if (((previousValue != value) 
							|| (this._Lista.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lista.Entity = null;
						previousValue.ProduktListas.Remove(this);
					}
					this._Lista.Entity = value;
					if ((value != null))
					{
						value.ProduktListas.Add(this);
						this._lista_ID = value.lista_ID;
					}
					else
					{
						this._lista_ID = default(int);
					}
					this.SendPropertyChanged("Lista");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Produkt")]
	public partial class Produkt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_produktu;
		
		private string _Nazwa;
		
		private string _Kalorie;
		
		private string _Białko;
		
		private string _Węglowodany;
		
		private string _Tłuszcze;
		
		private EntitySet<Sklad> _Sklads;
		
		private EntitySet<ProduktLista> _ProduktListas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_produktuChanging(int value);
    partial void OnId_produktuChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnKalorieChanging(string value);
    partial void OnKalorieChanged();
    partial void OnBiałkoChanging(string value);
    partial void OnBiałkoChanged();
    partial void OnWęglowodanyChanging(string value);
    partial void OnWęglowodanyChanged();
    partial void OnTłuszczeChanging(string value);
    partial void OnTłuszczeChanged();
    #endregion
		
		public Produkt()
		{
			this._Sklads = new EntitySet<Sklad>(new Action<Sklad>(this.attach_Sklads), new Action<Sklad>(this.detach_Sklads));
			this._ProduktListas = new EntitySet<ProduktLista>(new Action<ProduktLista>(this.attach_ProduktListas), new Action<ProduktLista>(this.detach_ProduktListas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_produktu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_produktu
		{
			get
			{
				return this._Id_produktu;
			}
			set
			{
				if ((this._Id_produktu != value))
				{
					this.OnId_produktuChanging(value);
					this.SendPropertyChanging();
					this._Id_produktu = value;
					this.SendPropertyChanged("Id_produktu");
					this.OnId_produktuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kalorie", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Kalorie
		{
			get
			{
				return this._Kalorie;
			}
			set
			{
				if ((this._Kalorie != value))
				{
					this.OnKalorieChanging(value);
					this.SendPropertyChanging();
					this._Kalorie = value;
					this.SendPropertyChanged("Kalorie");
					this.OnKalorieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Białko", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Białko
		{
			get
			{
				return this._Białko;
			}
			set
			{
				if ((this._Białko != value))
				{
					this.OnBiałkoChanging(value);
					this.SendPropertyChanging();
					this._Białko = value;
					this.SendPropertyChanged("Białko");
					this.OnBiałkoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Węglowodany", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Węglowodany
		{
			get
			{
				return this._Węglowodany;
			}
			set
			{
				if ((this._Węglowodany != value))
				{
					this.OnWęglowodanyChanging(value);
					this.SendPropertyChanging();
					this._Węglowodany = value;
					this.SendPropertyChanged("Węglowodany");
					this.OnWęglowodanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tłuszcze", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Tłuszcze
		{
			get
			{
				return this._Tłuszcze;
			}
			set
			{
				if ((this._Tłuszcze != value))
				{
					this.OnTłuszczeChanging(value);
					this.SendPropertyChanging();
					this._Tłuszcze = value;
					this.SendPropertyChanged("Tłuszcze");
					this.OnTłuszczeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produkt_Sklad", Storage="_Sklads", ThisKey="Id_produktu", OtherKey="Id_produktu")]
		public EntitySet<Sklad> Sklads
		{
			get
			{
				return this._Sklads;
			}
			set
			{
				this._Sklads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produkt_ProduktLista", Storage="_ProduktListas", ThisKey="Id_produktu", OtherKey="Id_produktu")]
		public EntitySet<ProduktLista> ProduktListas
		{
			get
			{
				return this._ProduktListas;
			}
			set
			{
				this._ProduktListas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sklads(Sklad entity)
		{
			this.SendPropertyChanging();
			entity.Produkt = this;
		}
		
		private void detach_Sklads(Sklad entity)
		{
			this.SendPropertyChanging();
			entity.Produkt = null;
		}
		
		private void attach_ProduktListas(ProduktLista entity)
		{
			this.SendPropertyChanging();
			entity.Produkt = this;
		}
		
		private void detach_ProduktListas(ProduktLista entity)
		{
			this.SendPropertyChanging();
			entity.Produkt = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lista")]
	public partial class Lista : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _lista_ID;
		
		private string _Nazwa;
		
		private EntitySet<ProduktLista> _ProduktListas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onlista_IDChanging(int value);
    partial void Onlista_IDChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    #endregion
		
		public Lista()
		{
			this._ProduktListas = new EntitySet<ProduktLista>(new Action<ProduktLista>(this.attach_ProduktListas), new Action<ProduktLista>(this.detach_ProduktListas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lista_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int lista_ID
		{
			get
			{
				return this._lista_ID;
			}
			set
			{
				if ((this._lista_ID != value))
				{
					this.Onlista_IDChanging(value);
					this.SendPropertyChanging();
					this._lista_ID = value;
					this.SendPropertyChanged("lista_ID");
					this.Onlista_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lista_ProduktLista", Storage="_ProduktListas", ThisKey="lista_ID", OtherKey="lista_ID")]
		public EntitySet<ProduktLista> ProduktListas
		{
			get
			{
				return this._ProduktListas;
			}
			set
			{
				this._ProduktListas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProduktListas(ProduktLista entity)
		{
			this.SendPropertyChanging();
			entity.Lista = this;
		}
		
		private void detach_ProduktListas(ProduktLista entity)
		{
			this.SendPropertyChanging();
			entity.Lista = null;
		}
	}
}
#pragma warning restore 1591
